doctype html
html
  head
    title Homepage
    style.
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
      }

      body {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background-color: #f0f0f0;
      }

      h1 {
        color: #333;
        margin-bottom: 20px;
      }

      ul {
        list-style-type: none;
        padding: 0;
        margin-bottom: 20px;
      }

      li {
        padding: 10px 15px;
        margin: 5px 0;
        background-color: #ff6b6b;
        color: #fff;
        border-radius: 5px;
        text-align: center;
        position: relative;
      }

      .button-container {
        margin-top: 10px;
      }

      button {
        padding: 5px 10px;
        margin: 0 5px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        color: #fff;
      }

      .edit {
        background-color: #4CAF50;
      }

      .view {
        background-color: #2196F3; /* Blue */
      }

      .delete {
        background-color: #f44336;
      }

      /* Modal Styles */
      .modal {
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
        display: none; /* Hidden by default */
      }
      .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        border-radius: 5px;
      }
      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }
      .close:hover,
      .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
      }
      .ok-btn, .save-btn {
        background-color: #4CAF50; /* Green */
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        margin-top: 15px;
      }
      .ok-btn:hover, .save-btn:hover {
        background-color: #45a049;
      }

      /* Edit Form Styles */
      .edit-form {
        display: flex;
        flex-direction: column; /* Stack inputs vertically */
        gap: 15px; /* Space between inputs */
        margin-top: 15px; /* Space above the form */
      }
      .edit-form label {
        margin-bottom: 5px; /* Space below labels */
      }

  body
    if isAdmin
      h1 Welcome, Admin! Here are all users:
      ul
        each user in users
          li
            span #{user.id} - #{user.username}
            .button-container
              button.view(onclick=`viewUser("${user.id}", "${user.username}", "${user.email}", "${user.password}", "${user.created_at}")`) View
              button.edit(onclick=`editUser("${user.id}", "${user.username}", "${user.email}", "${user.password}")`) Edit
              button.delete(onclick=`deleteUser("${user.username}", "${user.id}")`) Delete
    else
      h1 Welcome, #{user.username}!

    // Modal for alerts and edit form
    .modal#alertModal
      .modal-content
        span.close &times;
        h2 User Information
        p#modalMessage
        div#editForm(style='display: none;')
          .edit-form
            input#editUserId(type="hidden")
            label(for="editUsername") Username:
            input#editUsername(type="text" placeholder="Username")
            label(for="editEmail") Email:
            input#editEmail(type="email" placeholder="Email")
            label(for="editPassword") Password:
            input#editPassword(type="password" placeholder="Password")
          button.save-btn(onclick="saveChanges()") Save Changes
        button.ok-btn(style="display: none;") OK

    script.
      const modal = document.getElementById("alertModal");
      const closeButton = document.getElementsByClassName("close")[0];
      const okButton = document.getElementsByClassName("ok-btn")[0];
      const editForm = document.getElementById("editForm");
      const editUserId = document.getElementById("editUserId");
      const editUsername = document.getElementById("editUsername");
      const editEmail = document.getElementById("editEmail");
      const editPassword = document.getElementById("editPassword");

      function viewUser(id, username, email, password, created_at) {
        modal.style.display = "block";
        document.getElementById("modalMessage").innerText = `ID: ${id}\nUsername: ${username}\nEmail: ${email}\nPassword Hash: ${password}\nCreated at: ${created_at}`;
        editForm.style.display = "none";
        okButton.style.display = "block";
      }

      function editUser(id, username, email, password) {
        modal.style.display = "block";
        editUserId.value = id; // Set user ID
        editUsername.value = username;
        editEmail.value = email;
        editPassword.value = password;
        editForm.style.display = "block";
        okButton.style.display = "none";
        document.getElementById("modalMessage").innerText = `Editing User ID: ${id}`;
      }

      function saveChanges() {
        const userId = editUserId.value; // Get user ID
        const updatedUsername = editUsername.value;
        const updatedEmail = editEmail.value;
        const updatedPassword = editPassword.value;

        fetch('/change', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ userId, username: updatedUsername, email: updatedEmail, password: updatedPassword }) // Include userId
        })
        .then(response => response.json())
        .then(data => {
          console.log(data); // handle response if needed
          modal.style.display = "none";
          location.reload(); // reload to reflect changes
        })
        .catch(error => console.error('Error:', error));
      }

      function deleteUser(username, userId) {
        modal.style.display = "block";
        document.getElementById("modalMessage").innerText = `Are you sure you want to delete user ${username} with ID: ${userId}?`;
        editForm.style.display = "none";
        okButton.style.display = "block";

        okButton.onclick = function () {
          fetch('/delete', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId })
          })
          .then(response => response.json())
          .then(data => {
            console.log(data); // handle response if needed
            modal.style.display = "none";
            location.reload(); // reload the page to reflect changes
          })
          .catch(error => console.error('Error:', error));
        };
      }

      closeButton.onclick = function() {
        modal.style.display = "none";
      }

      window.onclick = function(event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      }
